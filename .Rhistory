names(dat)
View(dat)
# 4
dat = read.table("No_4.txt", h = T)
attach(dat)
names(dat)
# Set Group 1 2 3 as a factor
dat$Group = as.factor(dat$Group)
# Label the group
dat$Group = factor(dat$Group, labels = c("oren", "hitam", "putih"))
class(dat$Group)
Group1 = subset(dat, Group == "oren")
Group2 = subset(dat, Group == "hitam")
Group3 = subset(dat, Group == "putih")
qqnorm(Group1$Length)
qqline(Group1$Length)
qqnorm(Group2$Length)
qqline(Group2$Length)
qqnorm(Group3$Length)
qqline(Group3$Length)
# Outlier using homegeneneity of variances
bartlett.test(Length ~ Group, data = dat)
# Anova test
# lm itu linear model
mdl = lm(Length ~ Group, data = dat)
anova(mdl)
# Melihat mana length yg berbeda
TukeyHSD(aov(mdl))
ggplot(dat, aes(x = Group, y = Length) +
geom_boxplot(fill = "grey80", colour = "black") +
scale_x_discrete() +
xlab("Treatment Group") + ylab("Length(cm)"))
install.packages("ggplot2")
library("ggplot2")
ggplot(dat, aes(x = Group, y = Length) +
geom_boxplot(fill = "grey80", colour = "black") +
scale_x_discrete() +
xlab("Treatment Group") + ylab("Length(cm)"))
ggplot(dat, aes(x = Group, y = Length)) +
geom_boxplot(fill = "grey80", colour = "black") +
scale_x_discrete() +
xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot()
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length, col = group))
+ geom_boxplot()
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length, col = group))
+ geom_boxplot()
ggplot(dat, aes(x = Group, y = Length, col = Group))
+ geom_boxplot()
# Untuk menampilkan box plot
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot()
install.packages("ggplot2")
library("ggplot2")
# Untuk menampilkan box plot
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot()
install.packages("ggplot2")
library("ggplot2")
# Untuk menampilkan box plot
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot()
# Untuk menampilkan box plot
ggplot(dat, aes(x = Group, y = Length, fill = Group))
+ geom_boxplot()
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot(fill = "grey80", colour = "black")
+ scale_fill_manual(breaks = Group, values = c("yellow", "red", "green"))
+ scale_x_discrete() \
+ xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot(fill = "grey80", colour = "black")
+ scale_fill_manual(breaks = Group, values = c("yellow", "red", "green"))
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot(fill = "grey80", colour = "black")
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
# 4
dat = read.table("No_4.txt", h = T)
attach(dat)
names(dat)
# Set Group 1 2 3 as a factor
dat$Group = as.factor(dat$Group)
# Label the group
dat$Group = factor(dat$Group, labels = c("oren", "hitam", "putih"))
# Check apakah sudah menjadi factor
class(dat$Group)
Group1 = subset(dat, Group == "oren")
Group2 = subset(dat, Group == "hitam")
Group3 = subset(dat, Group == "putih")
qqnorm(Group1$Length)
qqline(Group1$Length)
qqnorm(Group2$Length)
qqline(Group2$Length)
qqnorm(Group3$Length)
qqline(Group3$Length)
# Outlier using homegeneneity of variances
bartlett.test(Length ~ Group, data = dat)
# Anova test
# lm itu linear model
mdl = lm(Length ~ Group, data = dat)
# P value = karena lebih kecil dari 0,05 maka kita reject H0
#
anova(mdl)
# Melihat mana length yg berbeda utk tiap group
# Dari data jika P adj lebih besar dari 0,05 maka itu di reject H0
TukeyHSD(aov(mdl))
# Melihatkan data
# install.packages("ggplot2")
library("ggplot2")
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot(fill = "grey80", colour = "black")
+ scale_fill_manual(breaks = Group, values = c("yellow", "red", "green"))
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
# 4
dat = read.table("No_4.txt", h = T)
attach(dat)
names(dat)
# Set Group 1 2 3 as a factor
dat$Group = as.factor(dat$Group)
# Label the group
dat$Group = factor(dat$Group, labels = c("oren", "hitam", "putih"))
# Check apakah sudah menjadi factor
class(dat$Group)
Group1 = subset(dat, Group == "oren")
Group2 = subset(dat, Group == "hitam")
Group3 = subset(dat, Group == "putih")
qqnorm(Group1$Length)
qqline(Group1$Length)
qqnorm(Group2$Length)
qqline(Group2$Length)
qqnorm(Group3$Length)
qqline(Group3$Length)
# Outlier using homegeneneity of variances
bartlett.test(Length ~ Group, data = dat)
# Anova test
# lm itu linear model
mdl = lm(Length ~ Group, data = dat)
# P value = karena lebih kecil dari 0,05 maka kita reject H0
#
anova(mdl)
# Melihat mana length yg berbeda utk tiap group
# Dari data jika P adj lebih besar dari 0,05 maka itu di reject H0
TukeyHSD(aov(mdl))
# Melihatkan data
# install.packages("ggplot2")
library("ggplot2")
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot(fill = "grey80", colour = "black")
+ scale_fill_manual(breaks = Group, values = c("yellow", "red", "green"))
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
library("ggplot2")
ggplot(dat, aes(x = Group, y = Length))
+ geom_boxplot(fill = "grey80", colour = "black")
+ scale_x_discrete()
+ xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length))+ geom_boxplot(fill = "grey80", colour = "black") + scale_x_discrete()+ xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length))+
geom_boxplot(fill = "grey80", colour = "black") +
scale_fill_manual(breaks = Group, values = c("yellow", "red", "green")) +
scale_x_discrete() +
xlab("Treatment Group") + ylab("Length(cm)")
ggplot(dat, aes(x = Group, y = Length))+
geom_boxplot(fill = "grey80", colour = "black") +
scale_fill_manual(breaks = Group, Length = c("yellow", "red", "green")) +
scale_x_discrete() +
xlab("Treatment Group") + ylab("Length(cm)")
# Melihatkan data
# install.packages("ggplot2")
library("ggplot2")
ggplot(dat, aes(x = Group, y = Length))+
geom_boxplot(fill = "grey80", colour = "black") +
scale_x_discrete() +
xlab("Group") + ylab("Length")
qqnorm(Group1$Length)
qqline(Group1$Length)
qqnorm(Group2$Length)
qqline(Group2$Length)
qqnorm(Group3$Length)
qqline(Group3$Length)
# Outlier using homegeneneity of variances
bartlett.test(Length ~ Group, data = dat)
# Anova test
# lm itu linear model
mdl = lm(Length ~ Group, data = dat)
# P value = karena lebih kecil dari 0,05 maka kita reject H0
#
anova(mdl)
# Melihat mana length yg berbeda utk tiap group
# Dari data jika P adj lebih besar dari 0,05 maka itu di reject H0
TukeyHSD(aov(mdl))
# 3B
tsum.test(mean.x=3.64, s.x = 1.67, n.x = 19, mean.y =2.79 , s.y = 1.32,
n.y = 27, alternative = "two.side", var.equal = TRUE)
set.seed(3)
sbandung <- rnorm(19, 3.64, 1.67)
sbali <- rnorm(27, 2.79, 1.32)
sbandung
sbali
# c
t.test(sbandung, sbali, alternative = "two.sided", var.equal = TRUE)
# d nilai kritikal= -4.302653 dan 4.302653
qt(p = 0.05 / 2, df = 2, lower.tail = FALSE)
set.seed(3)
sbandung <- rnorm(19, 3.64, 1.67)
sbali <- rnorm(27, 2.79, 1.32)
sbandung
sbali
# c
t.test(sbandung, sbali, alternative = "two.sided", var.equal = TRUE)
# d nilai kritikal= -4.302653 dan 4.302653
qt(p = 0.05 / 2, df = 2, lower.tail = FALSE)
# 3
n_1 = 19
n_2 = 27
mean_1 = 3.64
mean_2 = 2.79
s_1 = 1.67
s_2 = 1.32
df = 2
# 3
n_1 = 19
n_2 = 27
mean_1 = 3.64
mean_2 = 2.79
s_1 = 1.67
s_2 = 1.32
df = 2
cof = 0.05
# b
tsum.test(mean.x = mean_1, s.x = s_1, n.x = n_1,
mean.y = mean_2, s.y = s_2, n.y = n_2,
alternative = "two.side", var.equal = TRUE)
# 3
install.packages("BSDA")
library(BSDA)
n_1 = 19
n_2 = 27
mean_1 = 3.64
mean_2 = 2.79
s_1 = 1.67
s_2 = 1.32
df = 2
cof = 0.05
# b
tsum.test(mean.x = mean_1, s.x = s_1, n.x = n_1,
mean.y = mean_2, s.y = s_2, n.y = n_2,
alternative = "two.side", var.equal = TRUE)
conf = 0.95
# b
tsum.test(mean.x = mean_1, s.x = s_1, n.x = n_1,
mean.y = mean_2, s.y = s_2, n.y = n_2,
conf.level = conf)
# d
qt(p = (1-conf)/2, df = 2)
# d
qt(p = (1-conf)/2, df = 2, lower.tail = FALSE)
# 5
dat = read.csv("https://drive.google.com/file/d/1aLUOdw_LVJq6VQrQEkuQhZ8FW43FemTJ/view")
attach(dat)
names(dat)
View(dat)
View(dat)
View(dat)
View(dat)
# 5
dat = read.csv("https://drive.google.com/file/d/1aLUOdw_LVJq6VQrQEkuQhZ8FW43FemTJ/view")
dat = read.csv("GTL.csv")
# 5
dat = read.csv("GTL.csv")
attach(dat)
names(dat)
View(dat)
View(dat)
source("~/GitHub/P2_Probstat_E_5025201023/E_5025201023.R")
source("~/GitHub/P2_Probstat_E_5025201023/E_5025201023.R")
table(datP$Glass, dat$Temp)
table(dat$Glass, dat$Temp)
library("ggpubr")
# 5
install.packages("ggpubr", dependencies = TRUE)
# 5
install.packages("ggpubr", dependencies = TRUE)
dat = read.csv("GTL.csv")
attach(dat)
names(dat)
# Set Glass A B C as a factor
dat$Glass = as.factor(dat$Glass)
# Label the Glass
dat$Glass = factor(dat$Glass, labels = c("A", "B", "C"))
table(dat$Glass, dat$Temp)
library("ggpubr")
ggboxplot(dat,
x = "Light", y = "Temp", color = "blue",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat,
x = "Light", y = "Temp", color = "blue",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
table(dat$Glass, dat$Temp)
library("ggpubr")
ggboxplot(dat,
x = "Light", y = "Temp", color = "blue",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat,
x = "Light", y = "Temp", color = "blue",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat,
x = "Light", y = "Temp",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat,
x = "Temp", y = "Light",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat,
x = "Temp", y = "Light", color = "Glass"
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat,
x = "Temp", y = "Light", color = "Glass",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800")
)
ggline(dat, x = "Temp", y = "Light", color = "Glass", add = c("mean_se", "dotplot"),palette = c("#00AFBB", "#E7B800")
)
ggline(dat, x = "Temp", y = "Light", color = "Glass", add = c("mean_se", "dotplot"), palette = c("#00AFBB", "#E7B800", #46eb34))
dat = read.csv("GTL.csv")
attach(dat)
names(dat)
# Set Glass A B C as a factor
dat$Glass = as.factor(dat$Glass)
# Label the Glass
dat$Glass = factor(dat$Glass, labels = c("A", "B", "C"))
table(dat$Glass, dat$Temp)
library("ggpubr")
ggline(dat, x = "Temp", y = "Light", color = "Glass", add = c("mean_se", "dotplot"), palette = c("#00AFBB", "#E7B800", #46eb34))
ggline(
dat, x = "Temp", y = "Light", color = "Glass",
add = c("dotplot"), palette = c("#00AFBB", "#E7B800", "#46eb34")
)
library("ggplot2")
# 5
install.packages("ggpubr", dependencies = TRUE)
install.packages("ggpubr", dependencies = TRUE)
dat = read.csv("GTL.csv")
attach(dat)
names(dat)
# Set Glass A B C as a factor
dat$Glass = as.factor(dat$Glass)
# Label the Glass
dat$Glass = factor(dat$Glass, labels = c("A", "B", "C"))
table(dat$Glass, dat$Temp)
library("ggplot2")
library("ggpubr")
ggline(
dat, x = "Temp", y = "Light", color = "Glass",
add = c("dotplot"), palette = c("#00AFBB", "#E7B800", "#46eb34")
)
qplot(dat$Glass, dat$Light, xlab="Glass", ylab="Light")
qplot(dat$Temp, dat$Light, xlab="Temp", ylab="Light")
ggline(
dat, x = "Temp", y = "Light", color = "Glass",
add = c("dotplot"), palette = c("#00AFBB", "#E7B800", "#46eb34")
)
View(dat)
#b
anov = aov(Light ~ Glass + Temp, data = dat)
summary(anov)
#c
group_by(dataCahaya, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
#c
require("dplyr")
group_by(dataCahaya, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
group_by(dat, Glass) %>%
summarise(
count = n(),
meanL = mean(Light, na.rm = TRUE),
sdL = sd(Light, na.rm = TRUE),
meanT = mean(Temp, na.rm = TRUE),
sdT = sd(Temp, na.rm = TRUE)
)
#c
require("dplyr")
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Temp))
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Temp), sd=sd(Temp))
group_by(dat, Glass, Light) %>%
summarise(mean=mean(Temp), sd=sd(Temp))
# 5
install.packages("ggpubr", dependencies = TRUE)
# Tukey
TukeyHSD(anov)
dat = read.csv("GTL.csv")
attach(dat)
names(dat)
# Set Glass A B C as a factor
dat$Glass = as.factor(dat$Glass)
# Label the Glass
dat$Glass = factor(dat$Glass, labels = c("A", "B", "C"))
table(dat$Glass, dat$Temp)
library("ggplot2")
library("ggpubr")
ggline(
dat, x = "Temp", y = "Light", color = "Glass",
add = c("dotplot"), palette = c("#00AFBB", "#E7B800", "#46eb34")
)
#b
anov = aov(Light ~ Glass + Temp, data = dat)
summary(anov)
#c
require("dplyr")
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
# Tukey
TukeyHSD(anov)
# e
multcompLetters4(anova, tukey)
# e
multcompLetters4(anov, tuky)
# e
require("multcompLetters4")
# e
library("multcompLetters4")
# e
require("multcompView")
multcompLetters4(anov, tuky)
# e
library("multcompView")
#
install.packages("multcompView", dependencies = TRUE)
library("multcomp")
multcompLetters4(anov, tuky)
#
install.packages("multcomp", dependencies = TRUE)
install.packages("multcomp", dependencies = TRUE)
dat = read.csv("GTL.csv")
attach(dat)
names(dat)
# Set Glass A B C as a factor
dat$Glass = as.factor(dat$Glass)
# Label the Glass
dat$Glass = factor(dat$Glass, labels = c("A", "B", "C"))
table(dat$Glass, dat$Temp)
library("ggplot2")
library("ggpubr")
ggline(
dat, x = "Temp", y = "Light", color = "Glass",
add = c("dotplot"), palette = c("#00AFBB", "#E7B800", "#46eb34")
)
#b
anov = aov(Light ~ Glass + Temp, data = dat)
summary(anov)
#c
require("dplyr")
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
#d
# Tukey
tuky = TukeyHSD(anov)
library("multcomp")
multcompLetters4(anov, tuky)
library("multcompView")
multcompLetters4(anov, tuky)
#b
anov = aov(Light ~ Glass + Temp + Glass:Temp, data = dat)
summary(anov)
#c
require("dplyr")
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
#d
# Tukey
tuky = TukeyHSD(anov)
library("multcompView")
multcompLetters4(anov, tuky)
#b
anov = aov(Light ~ Glass + Temp + Glass:Temp, data = dat)
summary(anov)
#c
require("dplyr")
group_by(dat, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light))
#d
# Tukey
tuky = TukeyHSD(anov)
library("multcompView")
multcompLetters4(anov, tuky)
